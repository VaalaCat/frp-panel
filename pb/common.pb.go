// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: common.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RespCode int32

const (
	RespCode_RESP_CODE_UNSPECIFIED    RespCode = 0
	RespCode_RESP_CODE_SUCCESS        RespCode = 1
	RespCode_RESP_CODE_NOT_FOUND      RespCode = 2
	RespCode_RESP_CODE_ALREADY_EXISTS RespCode = 3
	RespCode_RESP_CODE_INVALID        RespCode = 4
	RespCode_RESP_CODE_FINISH         RespCode = 5
	RespCode_RESP_CODE_UNAUTHORIZED   RespCode = 6
)

// Enum value maps for RespCode.
var (
	RespCode_name = map[int32]string{
		0: "RESP_CODE_UNSPECIFIED",
		1: "RESP_CODE_SUCCESS",
		2: "RESP_CODE_NOT_FOUND",
		3: "RESP_CODE_ALREADY_EXISTS",
		4: "RESP_CODE_INVALID",
		5: "RESP_CODE_FINISH",
		6: "RESP_CODE_UNAUTHORIZED",
	}
	RespCode_value = map[string]int32{
		"RESP_CODE_UNSPECIFIED":    0,
		"RESP_CODE_SUCCESS":        1,
		"RESP_CODE_NOT_FOUND":      2,
		"RESP_CODE_ALREADY_EXISTS": 3,
		"RESP_CODE_INVALID":        4,
		"RESP_CODE_FINISH":         5,
		"RESP_CODE_UNAUTHORIZED":   6,
	}
)

func (x RespCode) Enum() *RespCode {
	p := new(RespCode)
	*p = x
	return p
}

func (x RespCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RespCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (RespCode) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x RespCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RespCode.Descriptor instead.
func (RespCode) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type ClientType int32

const (
	ClientType_CLIENT_TYPE_UNSPECIFIED ClientType = 0
	ClientType_CLIENT_TYPE_FRPC        ClientType = 1
	ClientType_CLIENT_TYPE_FRPS        ClientType = 2
)

// Enum value maps for ClientType.
var (
	ClientType_name = map[int32]string{
		0: "CLIENT_TYPE_UNSPECIFIED",
		1: "CLIENT_TYPE_FRPC",
		2: "CLIENT_TYPE_FRPS",
	}
	ClientType_value = map[string]int32{
		"CLIENT_TYPE_UNSPECIFIED": 0,
		"CLIENT_TYPE_FRPC":        1,
		"CLIENT_TYPE_FRPS":        2,
	}
)

func (x ClientType) Enum() *ClientType {
	p := new(ClientType)
	*p = x
	return p
}

func (x ClientType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (ClientType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x ClientType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientType.Descriptor instead.
func (ClientType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

type Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          RespCode               `protobuf:"varint,1,opt,name=code,proto3,enum=common.RespCode" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetCode() RespCode {
	if x != nil {
		return x.Code
	}
	return RespCode_RESP_CODE_UNSPECIFIED
}

func (x *Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CommonRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *string                `protobuf:"bytes,1,opt,name=data,proto3,oneof" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommonRequest) Reset() {
	*x = CommonRequest{}
	mi := &file_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRequest) ProtoMessage() {}

func (x *CommonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRequest.ProtoReflect.Descriptor instead.
func (*CommonRequest) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *CommonRequest) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

type CommonResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *Status                `protobuf:"bytes,1,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Data          *string                `protobuf:"bytes,2,opt,name=data,proto3,oneof" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommonResponse) Reset() {
	*x = CommonResponse{}
	mi := &file_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonResponse) ProtoMessage() {}

func (x *CommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonResponse.ProtoReflect.Descriptor instead.
func (*CommonResponse) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *CommonResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *CommonResponse) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

type Client struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             *string                `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Secret         *string                `protobuf:"bytes,2,opt,name=secret,proto3,oneof" json:"secret,omitempty"`
	Config         *string                `protobuf:"bytes,3,opt,name=config,proto3,oneof" json:"config,omitempty"`
	Comment        *string                `protobuf:"bytes,5,opt,name=comment,proto3,oneof" json:"comment,omitempty"` // 用户自定义的备注
	ServerId       *string                `protobuf:"bytes,6,opt,name=server_id,json=serverId,proto3,oneof" json:"server_id,omitempty"`
	Stopped        *bool                  `protobuf:"varint,7,opt,name=stopped,proto3,oneof" json:"stopped,omitempty"`
	ClientIds      []string               `protobuf:"bytes,8,rep,name=client_ids,json=clientIds,proto3" json:"client_ids,omitempty"` // some client can connected to more than one server, make a shadow client to handle this
	OriginClientId *string                `protobuf:"bytes,9,opt,name=origin_client_id,json=originClientId,proto3,oneof" json:"origin_client_id,omitempty"`
	FrpsUrl        *string                `protobuf:"bytes,10,opt,name=frps_url,json=frpsUrl,proto3,oneof" json:"frps_url,omitempty"`             // 客户端用于连接frps的url，解决 frp 在 CDN 后的问题，格式类似 [tcp/ws/wss/quic/kcp]://example.com:7000
	Ephemeral      *bool                  `protobuf:"varint,11,opt,name=ephemeral,proto3,oneof" json:"ephemeral,omitempty"`                       // 是否临时节点
	LastSeenAt     *int64                 `protobuf:"varint,12,opt,name=last_seen_at,json=lastSeenAt,proto3,oneof" json:"last_seen_at,omitempty"` // 最后一次心跳时间戳
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Client) Reset() {
	*x = Client{}
	mi := &file_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *Client) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Client) GetSecret() string {
	if x != nil && x.Secret != nil {
		return *x.Secret
	}
	return ""
}

func (x *Client) GetConfig() string {
	if x != nil && x.Config != nil {
		return *x.Config
	}
	return ""
}

func (x *Client) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *Client) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *Client) GetStopped() bool {
	if x != nil && x.Stopped != nil {
		return *x.Stopped
	}
	return false
}

func (x *Client) GetClientIds() []string {
	if x != nil {
		return x.ClientIds
	}
	return nil
}

func (x *Client) GetOriginClientId() string {
	if x != nil && x.OriginClientId != nil {
		return *x.OriginClientId
	}
	return ""
}

func (x *Client) GetFrpsUrl() string {
	if x != nil && x.FrpsUrl != nil {
		return *x.FrpsUrl
	}
	return ""
}

func (x *Client) GetEphemeral() bool {
	if x != nil && x.Ephemeral != nil {
		return *x.Ephemeral
	}
	return false
}

func (x *Client) GetLastSeenAt() int64 {
	if x != nil && x.LastSeenAt != nil {
		return *x.LastSeenAt
	}
	return 0
}

type Server struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            *string                `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Secret        *string                `protobuf:"bytes,2,opt,name=secret,proto3,oneof" json:"secret,omitempty"`
	Ip            *string                `protobuf:"bytes,3,opt,name=ip,proto3,oneof" json:"ip,omitempty"`
	Config        *string                `protobuf:"bytes,4,opt,name=config,proto3,oneof" json:"config,omitempty"`               // 在定义上，ip和port只是为了方便使用
	Comment       *string                `protobuf:"bytes,5,opt,name=comment,proto3,oneof" json:"comment,omitempty"`             // 用户自定义的备注
	FrpsUrls      []string               `protobuf:"bytes,6,rep,name=frps_urls,json=frpsUrls,proto3" json:"frps_urls,omitempty"` // 客户端用于连接frps的url，解决 frp 在 CDN 后的问题，格式类似 [tcp/ws/wss/quic/kcp]://example.com:7000，可以有多个
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_common_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *Server) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Server) GetSecret() string {
	if x != nil && x.Secret != nil {
		return *x.Secret
	}
	return ""
}

func (x *Server) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *Server) GetConfig() string {
	if x != nil && x.Config != nil {
		return *x.Config
	}
	return ""
}

func (x *Server) GetComment() string {
	if x != nil && x.Comment != nil {
		return *x.Comment
	}
	return ""
}

func (x *Server) GetFrpsUrls() []string {
	if x != nil {
		return x.FrpsUrls
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        *int64                 `protobuf:"varint,1,opt,name=UserID,proto3,oneof" json:"UserID,omitempty"`
	TenantID      *int64                 `protobuf:"varint,2,opt,name=TenantID,proto3,oneof" json:"TenantID,omitempty"`
	UserName      *string                `protobuf:"bytes,3,opt,name=UserName,proto3,oneof" json:"UserName,omitempty"`
	Email         *string                `protobuf:"bytes,4,opt,name=Email,proto3,oneof" json:"Email,omitempty"`
	Status        *string                `protobuf:"bytes,5,opt,name=Status,proto3,oneof" json:"Status,omitempty"`
	Role          *string                `protobuf:"bytes,6,opt,name=Role,proto3,oneof" json:"Role,omitempty"`
	Token         *string                `protobuf:"bytes,7,opt,name=Token,proto3,oneof" json:"Token,omitempty"`
	RawPassword   *string                `protobuf:"bytes,8,opt,name=RawPassword,proto3,oneof" json:"RawPassword,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_common_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *User) GetUserID() int64 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *User) GetTenantID() int64 {
	if x != nil && x.TenantID != nil {
		return *x.TenantID
	}
	return 0
}

func (x *User) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *User) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *User) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

func (x *User) GetToken() string {
	if x != nil && x.Token != nil {
		return *x.Token
	}
	return ""
}

func (x *User) GetRawPassword() string {
	if x != nil && x.RawPassword != nil {
		return *x.RawPassword
	}
	return ""
}

type ProxyInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              *string                `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Type              *string                `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
	ClientId          *string                `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3,oneof" json:"client_id,omitempty"`
	ServerId          *string                `protobuf:"bytes,4,opt,name=server_id,json=serverId,proto3,oneof" json:"server_id,omitempty"`
	TodayTrafficIn    *int64                 `protobuf:"varint,5,opt,name=today_traffic_in,json=todayTrafficIn,proto3,oneof" json:"today_traffic_in,omitempty"`
	TodayTrafficOut   *int64                 `protobuf:"varint,6,opt,name=today_traffic_out,json=todayTrafficOut,proto3,oneof" json:"today_traffic_out,omitempty"`
	HistoryTrafficIn  *int64                 `protobuf:"varint,7,opt,name=history_traffic_in,json=historyTrafficIn,proto3,oneof" json:"history_traffic_in,omitempty"`
	HistoryTrafficOut *int64                 `protobuf:"varint,8,opt,name=history_traffic_out,json=historyTrafficOut,proto3,oneof" json:"history_traffic_out,omitempty"`
	FirstSync         *bool                  `protobuf:"varint,9,opt,name=first_sync,json=firstSync,proto3,oneof" json:"first_sync,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ProxyInfo) Reset() {
	*x = ProxyInfo{}
	mi := &file_common_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyInfo) ProtoMessage() {}

func (x *ProxyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyInfo.ProtoReflect.Descriptor instead.
func (*ProxyInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *ProxyInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProxyInfo) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ProxyInfo) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *ProxyInfo) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *ProxyInfo) GetTodayTrafficIn() int64 {
	if x != nil && x.TodayTrafficIn != nil {
		return *x.TodayTrafficIn
	}
	return 0
}

func (x *ProxyInfo) GetTodayTrafficOut() int64 {
	if x != nil && x.TodayTrafficOut != nil {
		return *x.TodayTrafficOut
	}
	return 0
}

func (x *ProxyInfo) GetHistoryTrafficIn() int64 {
	if x != nil && x.HistoryTrafficIn != nil {
		return *x.HistoryTrafficIn
	}
	return 0
}

func (x *ProxyInfo) GetHistoryTrafficOut() int64 {
	if x != nil && x.HistoryTrafficOut != nil {
		return *x.HistoryTrafficOut
	}
	return 0
}

func (x *ProxyInfo) GetFirstSync() bool {
	if x != nil && x.FirstSync != nil {
		return *x.FirstSync
	}
	return false
}

type ProxyConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             *uint32                `protobuf:"varint,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Name           *string                `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Type           *string                `protobuf:"bytes,3,opt,name=type,proto3,oneof" json:"type,omitempty"`
	ClientId       *string                `protobuf:"bytes,4,opt,name=client_id,json=clientId,proto3,oneof" json:"client_id,omitempty"`
	ServerId       *string                `protobuf:"bytes,5,opt,name=server_id,json=serverId,proto3,oneof" json:"server_id,omitempty"`
	Config         *string                `protobuf:"bytes,6,opt,name=config,proto3,oneof" json:"config,omitempty"`
	OriginClientId *string                `protobuf:"bytes,7,opt,name=origin_client_id,json=originClientId,proto3,oneof" json:"origin_client_id,omitempty"`
	Stopped        *bool                  `protobuf:"varint,8,opt,name=stopped,proto3,oneof" json:"stopped,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProxyConfig) Reset() {
	*x = ProxyConfig{}
	mi := &file_common_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyConfig) ProtoMessage() {}

func (x *ProxyConfig) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyConfig.ProtoReflect.Descriptor instead.
func (*ProxyConfig) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *ProxyConfig) GetId() uint32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *ProxyConfig) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProxyConfig) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ProxyConfig) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *ProxyConfig) GetServerId() string {
	if x != nil && x.ServerId != nil {
		return *x.ServerId
	}
	return ""
}

func (x *ProxyConfig) GetConfig() string {
	if x != nil && x.Config != nil {
		return *x.Config
	}
	return ""
}

func (x *ProxyConfig) GetOriginClientId() string {
	if x != nil && x.OriginClientId != nil {
		return *x.OriginClientId
	}
	return ""
}

func (x *ProxyConfig) GetStopped() bool {
	if x != nil && x.Stopped != nil {
		return *x.Stopped
	}
	return false
}

type ProxyWorkingStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Type          *string                `protobuf:"bytes,2,opt,name=type,proto3,oneof" json:"type,omitempty"`
	Status        *string                `protobuf:"bytes,3,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Err           *string                `protobuf:"bytes,4,opt,name=err,proto3,oneof" json:"err,omitempty"`
	RemoteAddr    *string                `protobuf:"bytes,5,opt,name=remote_addr,json=remoteAddr,proto3,oneof" json:"remote_addr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProxyWorkingStatus) Reset() {
	*x = ProxyWorkingStatus{}
	mi := &file_common_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxyWorkingStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyWorkingStatus) ProtoMessage() {}

func (x *ProxyWorkingStatus) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyWorkingStatus.ProtoReflect.Descriptor instead.
func (*ProxyWorkingStatus) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

func (x *ProxyWorkingStatus) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProxyWorkingStatus) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ProxyWorkingStatus) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ProxyWorkingStatus) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

func (x *ProxyWorkingStatus) GetRemoteAddr() string {
	if x != nil && x.RemoteAddr != nil {
		return *x.RemoteAddr
	}
	return ""
}

var File_common_proto protoreflect.FileDescriptor

const file_common_proto_rawDesc = "" +
	"\n" +
	"\fcommon.proto\x12\x06common\"H\n" +
	"\x06Status\x12$\n" +
	"\x04code\x18\x01 \x01(\x0e2\x10.common.RespCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"1\n" +
	"\rCommonRequest\x12\x17\n" +
	"\x04data\x18\x01 \x01(\tH\x00R\x04data\x88\x01\x01B\a\n" +
	"\x05_data\"j\n" +
	"\x0eCommonResponse\x12+\n" +
	"\x06status\x18\x01 \x01(\v2\x0e.common.StatusH\x00R\x06status\x88\x01\x01\x12\x17\n" +
	"\x04data\x18\x02 \x01(\tH\x01R\x04data\x88\x01\x01B\t\n" +
	"\a_statusB\a\n" +
	"\x05_data\"\xf3\x03\n" +
	"\x06Client\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01\x12\x1b\n" +
	"\x06secret\x18\x02 \x01(\tH\x01R\x06secret\x88\x01\x01\x12\x1b\n" +
	"\x06config\x18\x03 \x01(\tH\x02R\x06config\x88\x01\x01\x12\x1d\n" +
	"\acomment\x18\x05 \x01(\tH\x03R\acomment\x88\x01\x01\x12 \n" +
	"\tserver_id\x18\x06 \x01(\tH\x04R\bserverId\x88\x01\x01\x12\x1d\n" +
	"\astopped\x18\a \x01(\bH\x05R\astopped\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"client_ids\x18\b \x03(\tR\tclientIds\x12-\n" +
	"\x10origin_client_id\x18\t \x01(\tH\x06R\x0eoriginClientId\x88\x01\x01\x12\x1e\n" +
	"\bfrps_url\x18\n" +
	" \x01(\tH\aR\afrpsUrl\x88\x01\x01\x12!\n" +
	"\tephemeral\x18\v \x01(\bH\bR\tephemeral\x88\x01\x01\x12%\n" +
	"\flast_seen_at\x18\f \x01(\x03H\tR\n" +
	"lastSeenAt\x88\x01\x01B\x05\n" +
	"\x03_idB\t\n" +
	"\a_secretB\t\n" +
	"\a_configB\n" +
	"\n" +
	"\b_commentB\f\n" +
	"\n" +
	"_server_idB\n" +
	"\n" +
	"\b_stoppedB\x13\n" +
	"\x11_origin_client_idB\v\n" +
	"\t_frps_urlB\f\n" +
	"\n" +
	"_ephemeralB\x0f\n" +
	"\r_last_seen_at\"\xd8\x01\n" +
	"\x06Server\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01\x12\x1b\n" +
	"\x06secret\x18\x02 \x01(\tH\x01R\x06secret\x88\x01\x01\x12\x13\n" +
	"\x02ip\x18\x03 \x01(\tH\x02R\x02ip\x88\x01\x01\x12\x1b\n" +
	"\x06config\x18\x04 \x01(\tH\x03R\x06config\x88\x01\x01\x12\x1d\n" +
	"\acomment\x18\x05 \x01(\tH\x04R\acomment\x88\x01\x01\x12\x1b\n" +
	"\tfrps_urls\x18\x06 \x03(\tR\bfrpsUrlsB\x05\n" +
	"\x03_idB\t\n" +
	"\a_secretB\x05\n" +
	"\x03_ipB\t\n" +
	"\a_configB\n" +
	"\n" +
	"\b_comment\"\xd5\x02\n" +
	"\x04User\x12\x1b\n" +
	"\x06UserID\x18\x01 \x01(\x03H\x00R\x06UserID\x88\x01\x01\x12\x1f\n" +
	"\bTenantID\x18\x02 \x01(\x03H\x01R\bTenantID\x88\x01\x01\x12\x1f\n" +
	"\bUserName\x18\x03 \x01(\tH\x02R\bUserName\x88\x01\x01\x12\x19\n" +
	"\x05Email\x18\x04 \x01(\tH\x03R\x05Email\x88\x01\x01\x12\x1b\n" +
	"\x06Status\x18\x05 \x01(\tH\x04R\x06Status\x88\x01\x01\x12\x17\n" +
	"\x04Role\x18\x06 \x01(\tH\x05R\x04Role\x88\x01\x01\x12\x19\n" +
	"\x05Token\x18\a \x01(\tH\x06R\x05Token\x88\x01\x01\x12%\n" +
	"\vRawPassword\x18\b \x01(\tH\aR\vRawPassword\x88\x01\x01B\t\n" +
	"\a_UserIDB\v\n" +
	"\t_TenantIDB\v\n" +
	"\t_UserNameB\b\n" +
	"\x06_EmailB\t\n" +
	"\a_StatusB\a\n" +
	"\x05_RoleB\b\n" +
	"\x06_TokenB\x0e\n" +
	"\f_RawPassword\"\x84\x04\n" +
	"\tProxyInfo\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x02 \x01(\tH\x01R\x04type\x88\x01\x01\x12 \n" +
	"\tclient_id\x18\x03 \x01(\tH\x02R\bclientId\x88\x01\x01\x12 \n" +
	"\tserver_id\x18\x04 \x01(\tH\x03R\bserverId\x88\x01\x01\x12-\n" +
	"\x10today_traffic_in\x18\x05 \x01(\x03H\x04R\x0etodayTrafficIn\x88\x01\x01\x12/\n" +
	"\x11today_traffic_out\x18\x06 \x01(\x03H\x05R\x0ftodayTrafficOut\x88\x01\x01\x121\n" +
	"\x12history_traffic_in\x18\a \x01(\x03H\x06R\x10historyTrafficIn\x88\x01\x01\x123\n" +
	"\x13history_traffic_out\x18\b \x01(\x03H\aR\x11historyTrafficOut\x88\x01\x01\x12\"\n" +
	"\n" +
	"first_sync\x18\t \x01(\bH\bR\tfirstSync\x88\x01\x01B\a\n" +
	"\x05_nameB\a\n" +
	"\x05_typeB\f\n" +
	"\n" +
	"_client_idB\f\n" +
	"\n" +
	"_server_idB\x13\n" +
	"\x11_today_traffic_inB\x14\n" +
	"\x12_today_traffic_outB\x15\n" +
	"\x13_history_traffic_inB\x16\n" +
	"\x14_history_traffic_outB\r\n" +
	"\v_first_sync\"\xe4\x02\n" +
	"\vProxyConfig\x12\x13\n" +
	"\x02id\x18\x01 \x01(\rH\x00R\x02id\x88\x01\x01\x12\x17\n" +
	"\x04name\x18\x02 \x01(\tH\x01R\x04name\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x03 \x01(\tH\x02R\x04type\x88\x01\x01\x12 \n" +
	"\tclient_id\x18\x04 \x01(\tH\x03R\bclientId\x88\x01\x01\x12 \n" +
	"\tserver_id\x18\x05 \x01(\tH\x04R\bserverId\x88\x01\x01\x12\x1b\n" +
	"\x06config\x18\x06 \x01(\tH\x05R\x06config\x88\x01\x01\x12-\n" +
	"\x10origin_client_id\x18\a \x01(\tH\x06R\x0eoriginClientId\x88\x01\x01\x12\x1d\n" +
	"\astopped\x18\b \x01(\bH\aR\astopped\x88\x01\x01B\x05\n" +
	"\x03_idB\a\n" +
	"\x05_nameB\a\n" +
	"\x05_typeB\f\n" +
	"\n" +
	"_client_idB\f\n" +
	"\n" +
	"_server_idB\t\n" +
	"\a_configB\x13\n" +
	"\x11_origin_client_idB\n" +
	"\n" +
	"\b_stopped\"\xd5\x01\n" +
	"\x12ProxyWorkingStatus\x12\x17\n" +
	"\x04name\x18\x01 \x01(\tH\x00R\x04name\x88\x01\x01\x12\x17\n" +
	"\x04type\x18\x02 \x01(\tH\x01R\x04type\x88\x01\x01\x12\x1b\n" +
	"\x06status\x18\x03 \x01(\tH\x02R\x06status\x88\x01\x01\x12\x15\n" +
	"\x03err\x18\x04 \x01(\tH\x03R\x03err\x88\x01\x01\x12$\n" +
	"\vremote_addr\x18\x05 \x01(\tH\x04R\n" +
	"remoteAddr\x88\x01\x01B\a\n" +
	"\x05_nameB\a\n" +
	"\x05_typeB\t\n" +
	"\a_statusB\x06\n" +
	"\x04_errB\x0e\n" +
	"\f_remote_addr*\xbc\x01\n" +
	"\bRespCode\x12\x19\n" +
	"\x15RESP_CODE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11RESP_CODE_SUCCESS\x10\x01\x12\x17\n" +
	"\x13RESP_CODE_NOT_FOUND\x10\x02\x12\x1c\n" +
	"\x18RESP_CODE_ALREADY_EXISTS\x10\x03\x12\x15\n" +
	"\x11RESP_CODE_INVALID\x10\x04\x12\x14\n" +
	"\x10RESP_CODE_FINISH\x10\x05\x12\x1a\n" +
	"\x16RESP_CODE_UNAUTHORIZED\x10\x06*U\n" +
	"\n" +
	"ClientType\x12\x1b\n" +
	"\x17CLIENT_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10CLIENT_TYPE_FRPC\x10\x01\x12\x14\n" +
	"\x10CLIENT_TYPE_FRPS\x10\x02B\aZ\x05../pbb\x06proto3"

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData []byte
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_proto_rawDesc), len(file_common_proto_rawDesc)))
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_common_proto_goTypes = []any{
	(RespCode)(0),              // 0: common.RespCode
	(ClientType)(0),            // 1: common.ClientType
	(*Status)(nil),             // 2: common.Status
	(*CommonRequest)(nil),      // 3: common.CommonRequest
	(*CommonResponse)(nil),     // 4: common.CommonResponse
	(*Client)(nil),             // 5: common.Client
	(*Server)(nil),             // 6: common.Server
	(*User)(nil),               // 7: common.User
	(*ProxyInfo)(nil),          // 8: common.ProxyInfo
	(*ProxyConfig)(nil),        // 9: common.ProxyConfig
	(*ProxyWorkingStatus)(nil), // 10: common.ProxyWorkingStatus
}
var file_common_proto_depIdxs = []int32{
	0, // 0: common.Status.code:type_name -> common.RespCode
	2, // 1: common.CommonResponse.status:type_name -> common.Status
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	file_common_proto_msgTypes[1].OneofWrappers = []any{}
	file_common_proto_msgTypes[2].OneofWrappers = []any{}
	file_common_proto_msgTypes[3].OneofWrappers = []any{}
	file_common_proto_msgTypes[4].OneofWrappers = []any{}
	file_common_proto_msgTypes[5].OneofWrappers = []any{}
	file_common_proto_msgTypes[6].OneofWrappers = []any{}
	file_common_proto_msgTypes[7].OneofWrappers = []any{}
	file_common_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_proto_rawDesc), len(file_common_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
