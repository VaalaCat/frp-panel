// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v3.21.11
// source: types_wg.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// WireGuardPeerConfig wg peer 的配置
type WireGuardPeerConfig struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId            string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId              uint32                 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TenantId            uint32                 `protobuf:"varint,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	PublicKey           string                 `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`                                // Peer 的 wg 公钥
	PresharedKey        string                 `protobuf:"bytes,6,opt,name=preshared_key,json=presharedKey,proto3" json:"preshared_key,omitempty"`                       // (可选) Peer 的 WireGuard 预共享密钥
	AllowedIps          []string               `protobuf:"bytes,7,rep,name=allowed_ips,json=allowedIps,proto3" json:"allowed_ips,omitempty"`                             // 通过此 Peer 路由的 IP 地址/子网
	Endpoint            *Endpoint              `protobuf:"bytes,8,opt,name=endpoint,proto3" json:"endpoint,omitempty"`                                                   // (可选) Peer 的公网端点 "host:port"
	PersistentKeepalive uint32                 `protobuf:"varint,9,opt,name=persistent_keepalive,json=persistentKeepalive,proto3" json:"persistent_keepalive,omitempty"` // 可选
	Tags                []string               `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`                                                          // 标签
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *WireGuardPeerConfig) Reset() {
	*x = WireGuardPeerConfig{}
	mi := &file_types_wg_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WireGuardPeerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireGuardPeerConfig) ProtoMessage() {}

func (x *WireGuardPeerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_types_wg_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireGuardPeerConfig.ProtoReflect.Descriptor instead.
func (*WireGuardPeerConfig) Descriptor() ([]byte, []int) {
	return file_types_wg_proto_rawDescGZIP(), []int{0}
}

func (x *WireGuardPeerConfig) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WireGuardPeerConfig) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *WireGuardPeerConfig) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WireGuardPeerConfig) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *WireGuardPeerConfig) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *WireGuardPeerConfig) GetPresharedKey() string {
	if x != nil {
		return x.PresharedKey
	}
	return ""
}

func (x *WireGuardPeerConfig) GetAllowedIps() []string {
	if x != nil {
		return x.AllowedIps
	}
	return nil
}

func (x *WireGuardPeerConfig) GetEndpoint() *Endpoint {
	if x != nil {
		return x.Endpoint
	}
	return nil
}

func (x *WireGuardPeerConfig) GetPersistentKeepalive() uint32 {
	if x != nil {
		return x.PersistentKeepalive
	}
	return 0
}

func (x *WireGuardPeerConfig) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// WireGuardConfig wg 配置
type WireGuardConfig struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ClientId            string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId              uint32                 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TenantId            uint32                 `protobuf:"varint,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	InterfaceName       string                 `protobuf:"bytes,5,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`                    // WireGuard 网络接口的名称
	PrivateKey          string                 `protobuf:"bytes,6,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`                             // 接口的私钥
	LocalAddress        string                 `protobuf:"bytes,7,opt,name=local_address,json=localAddress,proto3" json:"local_address,omitempty"`                       // 虚拟接口的 CIDR
	ListenPort          uint32                 `protobuf:"varint,8,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`                            // (可选) WireGuard 监听端口，如果没有配置，则使用默认端口
	InterfaceMtu        uint32                 `protobuf:"varint,9,opt,name=interface_mtu,json=interfaceMtu,proto3" json:"interface_mtu,omitempty"`                      // 可选
	Peers               []*WireGuardPeerConfig `protobuf:"bytes,10,rep,name=peers,proto3" json:"peers,omitempty"`                                                        // Peer 列表
	AdvertisedEndpoints []*Endpoint            `protobuf:"bytes,11,rep,name=advertised_endpoints,json=advertisedEndpoints,proto3" json:"advertised_endpoints,omitempty"` // (可选) 外部可连接的地址
	DnsServers          []string               `protobuf:"bytes,12,rep,name=dns_servers,json=dnsServers,proto3" json:"dns_servers,omitempty"`                            // (可选) DNS 服务器列表
	NetworkId           uint32                 `protobuf:"varint,13,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`                              // 归属的网络 ID
	Tags                []string               `protobuf:"bytes,14,rep,name=tags,proto3" json:"tags,omitempty"`                                                          // 标签
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *WireGuardConfig) Reset() {
	*x = WireGuardConfig{}
	mi := &file_types_wg_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WireGuardConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireGuardConfig) ProtoMessage() {}

func (x *WireGuardConfig) ProtoReflect() protoreflect.Message {
	mi := &file_types_wg_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireGuardConfig.ProtoReflect.Descriptor instead.
func (*WireGuardConfig) Descriptor() ([]byte, []int) {
	return file_types_wg_proto_rawDescGZIP(), []int{1}
}

func (x *WireGuardConfig) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WireGuardConfig) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *WireGuardConfig) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WireGuardConfig) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *WireGuardConfig) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *WireGuardConfig) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *WireGuardConfig) GetLocalAddress() string {
	if x != nil {
		return x.LocalAddress
	}
	return ""
}

func (x *WireGuardConfig) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *WireGuardConfig) GetInterfaceMtu() uint32 {
	if x != nil {
		return x.InterfaceMtu
	}
	return 0
}

func (x *WireGuardConfig) GetPeers() []*WireGuardPeerConfig {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *WireGuardConfig) GetAdvertisedEndpoints() []*Endpoint {
	if x != nil {
		return x.AdvertisedEndpoints
	}
	return nil
}

func (x *WireGuardConfig) GetDnsServers() []string {
	if x != nil {
		return x.DnsServers
	}
	return nil
}

func (x *WireGuardConfig) GetNetworkId() uint32 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *WireGuardConfig) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type Endpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Host          string                 `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port          uint32                 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	ClientId      string                 `protobuf:"bytes,4,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	WireguardId   uint32                 `protobuf:"varint,5,opt,name=wireguard_id,json=wireguardId,proto3" json:"wireguard_id,omitempty"` // 分配的 WireGuard ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	mi := &file_types_wg_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_types_wg_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_types_wg_proto_rawDescGZIP(), []int{2}
}

func (x *Endpoint) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Endpoint) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Endpoint) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *Endpoint) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Endpoint) GetWireguardId() uint32 {
	if x != nil {
		return x.WireguardId
	}
	return 0
}

type WireGuardLink struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FromWireguardId   uint32                 `protobuf:"varint,2,opt,name=from_wireguard_id,json=fromWireguardId,proto3" json:"from_wireguard_id,omitempty"`
	ToWireguardId     uint32                 `protobuf:"varint,3,opt,name=to_wireguard_id,json=toWireguardId,proto3" json:"to_wireguard_id,omitempty"`
	UpBandwidthMbps   uint32                 `protobuf:"varint,4,opt,name=up_bandwidth_mbps,json=upBandwidthMbps,proto3" json:"up_bandwidth_mbps,omitempty"`
	DownBandwidthMbps uint32                 `protobuf:"varint,5,opt,name=down_bandwidth_mbps,json=downBandwidthMbps,proto3" json:"down_bandwidth_mbps,omitempty"`
	LatencyMs         uint32                 `protobuf:"varint,6,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	Active            bool                   `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *WireGuardLink) Reset() {
	*x = WireGuardLink{}
	mi := &file_types_wg_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WireGuardLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireGuardLink) ProtoMessage() {}

func (x *WireGuardLink) ProtoReflect() protoreflect.Message {
	mi := &file_types_wg_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireGuardLink.ProtoReflect.Descriptor instead.
func (*WireGuardLink) Descriptor() ([]byte, []int) {
	return file_types_wg_proto_rawDescGZIP(), []int{3}
}

func (x *WireGuardLink) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WireGuardLink) GetFromWireguardId() uint32 {
	if x != nil {
		return x.FromWireguardId
	}
	return 0
}

func (x *WireGuardLink) GetToWireguardId() uint32 {
	if x != nil {
		return x.ToWireguardId
	}
	return 0
}

func (x *WireGuardLink) GetUpBandwidthMbps() uint32 {
	if x != nil {
		return x.UpBandwidthMbps
	}
	return 0
}

func (x *WireGuardLink) GetDownBandwidthMbps() uint32 {
	if x != nil {
		return x.DownBandwidthMbps
	}
	return 0
}

func (x *WireGuardLink) GetLatencyMs() uint32 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

func (x *WireGuardLink) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type WireGuardLinks struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Links         []*WireGuardLink       `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WireGuardLinks) Reset() {
	*x = WireGuardLinks{}
	mi := &file_types_wg_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WireGuardLinks) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WireGuardLinks) ProtoMessage() {}

func (x *WireGuardLinks) ProtoReflect() protoreflect.Message {
	mi := &file_types_wg_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WireGuardLinks.ProtoReflect.Descriptor instead.
func (*WireGuardLinks) Descriptor() ([]byte, []int) {
	return file_types_wg_proto_rawDescGZIP(), []int{4}
}

func (x *WireGuardLinks) GetLinks() []*WireGuardLink {
	if x != nil {
		return x.Links
	}
	return nil
}

type Network struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TenantId      uint32                 `protobuf:"varint,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Cidr          string                 `protobuf:"bytes,5,opt,name=cidr,proto3" json:"cidr,omitempty"`
	Acl           *AclConfig             `protobuf:"bytes,6,opt,name=acl,proto3" json:"acl,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_types_wg_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_types_wg_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_types_wg_proto_rawDescGZIP(), []int{5}
}

func (x *Network) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Network) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Network) GetTenantId() uint32 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

func (x *Network) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Network) GetCidr() string {
	if x != nil {
		return x.Cidr
	}
	return ""
}

func (x *Network) GetAcl() *AclConfig {
	if x != nil {
		return x.Acl
	}
	return nil
}

type AclConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Acls          []*AclRuleConfig       `protobuf:"bytes,1,rep,name=acls,proto3" json:"acls,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AclConfig) Reset() {
	*x = AclConfig{}
	mi := &file_types_wg_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AclConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclConfig) ProtoMessage() {}

func (x *AclConfig) ProtoReflect() protoreflect.Message {
	mi := &file_types_wg_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclConfig.ProtoReflect.Descriptor instead.
func (*AclConfig) Descriptor() ([]byte, []int) {
	return file_types_wg_proto_rawDescGZIP(), []int{6}
}

func (x *AclConfig) GetAcls() []*AclRuleConfig {
	if x != nil {
		return x.Acls
	}
	return nil
}

type AclRuleConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        string                 `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
	Src           []string               `protobuf:"bytes,2,rep,name=src,proto3" json:"src,omitempty"`
	Dst           []string               `protobuf:"bytes,3,rep,name=dst,proto3" json:"dst,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AclRuleConfig) Reset() {
	*x = AclRuleConfig{}
	mi := &file_types_wg_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AclRuleConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AclRuleConfig) ProtoMessage() {}

func (x *AclRuleConfig) ProtoReflect() protoreflect.Message {
	mi := &file_types_wg_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AclRuleConfig.ProtoReflect.Descriptor instead.
func (*AclRuleConfig) Descriptor() ([]byte, []int) {
	return file_types_wg_proto_rawDescGZIP(), []int{7}
}

func (x *AclRuleConfig) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *AclRuleConfig) GetSrc() []string {
	if x != nil {
		return x.Src
	}
	return nil
}

func (x *AclRuleConfig) GetDst() []string {
	if x != nil {
		return x.Dst
	}
	return nil
}

type WGPeerRuntimeInfo struct {
	state                       protoimpl.MessageState `protogen:"open.v1"`
	PublicKey                   string                 `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PresharedKey                string                 `protobuf:"bytes,2,opt,name=preshared_key,json=presharedKey,proto3" json:"preshared_key,omitempty"`
	AllowedIps                  []string               `protobuf:"bytes,3,rep,name=allowed_ips,json=allowedIps,proto3" json:"allowed_ips,omitempty"`
	EndpointHost                string                 `protobuf:"bytes,4,opt,name=endpoint_host,json=endpointHost,proto3" json:"endpoint_host,omitempty"`
	EndpointPort                uint32                 `protobuf:"varint,5,opt,name=endpoint_port,json=endpointPort,proto3" json:"endpoint_port,omitempty"`
	TxBytes                     uint64                 `protobuf:"varint,6,opt,name=tx_bytes,json=txBytes,proto3" json:"tx_bytes,omitempty"`
	RxBytes                     uint64                 `protobuf:"varint,7,opt,name=rx_bytes,json=rxBytes,proto3" json:"rx_bytes,omitempty"`
	PersistentKeepaliveInterval uint32                 `protobuf:"varint,8,opt,name=persistent_keepalive_interval,json=persistentKeepaliveInterval,proto3" json:"persistent_keepalive_interval,omitempty"`
	LastHandshakeTimeNsec       uint64                 `protobuf:"varint,9,opt,name=last_handshake_time_nsec,json=lastHandshakeTimeNsec,proto3" json:"last_handshake_time_nsec,omitempty"`
	LastHandshakeTimeSec        uint64                 `protobuf:"varint,10,opt,name=last_handshake_time_sec,json=lastHandshakeTimeSec,proto3" json:"last_handshake_time_sec,omitempty"`
	ClientId                    string                 `protobuf:"bytes,11,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Extra                       map[string]string      `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *WGPeerRuntimeInfo) Reset() {
	*x = WGPeerRuntimeInfo{}
	mi := &file_types_wg_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WGPeerRuntimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGPeerRuntimeInfo) ProtoMessage() {}

func (x *WGPeerRuntimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_types_wg_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGPeerRuntimeInfo.ProtoReflect.Descriptor instead.
func (*WGPeerRuntimeInfo) Descriptor() ([]byte, []int) {
	return file_types_wg_proto_rawDescGZIP(), []int{8}
}

func (x *WGPeerRuntimeInfo) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *WGPeerRuntimeInfo) GetPresharedKey() string {
	if x != nil {
		return x.PresharedKey
	}
	return ""
}

func (x *WGPeerRuntimeInfo) GetAllowedIps() []string {
	if x != nil {
		return x.AllowedIps
	}
	return nil
}

func (x *WGPeerRuntimeInfo) GetEndpointHost() string {
	if x != nil {
		return x.EndpointHost
	}
	return ""
}

func (x *WGPeerRuntimeInfo) GetEndpointPort() uint32 {
	if x != nil {
		return x.EndpointPort
	}
	return 0
}

func (x *WGPeerRuntimeInfo) GetTxBytes() uint64 {
	if x != nil {
		return x.TxBytes
	}
	return 0
}

func (x *WGPeerRuntimeInfo) GetRxBytes() uint64 {
	if x != nil {
		return x.RxBytes
	}
	return 0
}

func (x *WGPeerRuntimeInfo) GetPersistentKeepaliveInterval() uint32 {
	if x != nil {
		return x.PersistentKeepaliveInterval
	}
	return 0
}

func (x *WGPeerRuntimeInfo) GetLastHandshakeTimeNsec() uint64 {
	if x != nil {
		return x.LastHandshakeTimeNsec
	}
	return 0
}

func (x *WGPeerRuntimeInfo) GetLastHandshakeTimeSec() uint64 {
	if x != nil {
		return x.LastHandshakeTimeSec
	}
	return 0
}

func (x *WGPeerRuntimeInfo) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *WGPeerRuntimeInfo) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type WGDeviceRuntimeInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PrivateKey      string                 `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	ListenPort      uint32                 `protobuf:"varint,2,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	Peers           []*WGPeerRuntimeInfo   `protobuf:"bytes,3,rep,name=peers,proto3" json:"peers,omitempty"`
	ProtocolVersion uint32                 `protobuf:"varint,4,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	Errno           int32                  `protobuf:"varint,5,opt,name=errno,proto3" json:"errno,omitempty"`
	ClientId        string                 `protobuf:"bytes,6,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	PingMap         map[uint32]uint32      `protobuf:"bytes,7,rep,name=ping_map,json=pingMap,proto3" json:"ping_map,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // to peer endpoint ping
	InterfaceName   string                 `protobuf:"bytes,8,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	Extra           map[string]string      `protobuf:"bytes,100,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *WGDeviceRuntimeInfo) Reset() {
	*x = WGDeviceRuntimeInfo{}
	mi := &file_types_wg_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WGDeviceRuntimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WGDeviceRuntimeInfo) ProtoMessage() {}

func (x *WGDeviceRuntimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_types_wg_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WGDeviceRuntimeInfo.ProtoReflect.Descriptor instead.
func (*WGDeviceRuntimeInfo) Descriptor() ([]byte, []int) {
	return file_types_wg_proto_rawDescGZIP(), []int{9}
}

func (x *WGDeviceRuntimeInfo) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *WGDeviceRuntimeInfo) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *WGDeviceRuntimeInfo) GetPeers() []*WGPeerRuntimeInfo {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *WGDeviceRuntimeInfo) GetProtocolVersion() uint32 {
	if x != nil {
		return x.ProtocolVersion
	}
	return 0
}

func (x *WGDeviceRuntimeInfo) GetErrno() int32 {
	if x != nil {
		return x.Errno
	}
	return 0
}

func (x *WGDeviceRuntimeInfo) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *WGDeviceRuntimeInfo) GetPingMap() map[uint32]uint32 {
	if x != nil {
		return x.PingMap
	}
	return nil
}

func (x *WGDeviceRuntimeInfo) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *WGDeviceRuntimeInfo) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_types_wg_proto protoreflect.FileDescriptor

const file_types_wg_proto_rawDesc = "" +
	"\n" +
	"\x0etypes_wg.proto\x12\twireguard\"\xd5\x02\n" +
	"\x13WireGuardPeerConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\rR\x06userId\x12\x1b\n" +
	"\ttenant_id\x18\x04 \x01(\rR\btenantId\x12\x1d\n" +
	"\n" +
	"public_key\x18\x05 \x01(\tR\tpublicKey\x12#\n" +
	"\rpreshared_key\x18\x06 \x01(\tR\fpresharedKey\x12\x1f\n" +
	"\vallowed_ips\x18\a \x03(\tR\n" +
	"allowedIps\x12/\n" +
	"\bendpoint\x18\b \x01(\v2\x13.wireguard.EndpointR\bendpoint\x121\n" +
	"\x14persistent_keepalive\x18\t \x01(\rR\x13persistentKeepalive\x12\x12\n" +
	"\x04tags\x18\n" +
	" \x03(\tR\x04tags\"\xf9\x03\n" +
	"\x0fWireGuardConfig\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\rR\x06userId\x12\x1b\n" +
	"\ttenant_id\x18\x04 \x01(\rR\btenantId\x12%\n" +
	"\x0einterface_name\x18\x05 \x01(\tR\rinterfaceName\x12\x1f\n" +
	"\vprivate_key\x18\x06 \x01(\tR\n" +
	"privateKey\x12#\n" +
	"\rlocal_address\x18\a \x01(\tR\flocalAddress\x12\x1f\n" +
	"\vlisten_port\x18\b \x01(\rR\n" +
	"listenPort\x12#\n" +
	"\rinterface_mtu\x18\t \x01(\rR\finterfaceMtu\x124\n" +
	"\x05peers\x18\n" +
	" \x03(\v2\x1e.wireguard.WireGuardPeerConfigR\x05peers\x12F\n" +
	"\x14advertised_endpoints\x18\v \x03(\v2\x13.wireguard.EndpointR\x13advertisedEndpoints\x12\x1f\n" +
	"\vdns_servers\x18\f \x03(\tR\n" +
	"dnsServers\x12\x1d\n" +
	"\n" +
	"network_id\x18\r \x01(\rR\tnetworkId\x12\x12\n" +
	"\x04tags\x18\x0e \x03(\tR\x04tags\"\x82\x01\n" +
	"\bEndpoint\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x12\n" +
	"\x04host\x18\x02 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x03 \x01(\rR\x04port\x12\x1b\n" +
	"\tclient_id\x18\x04 \x01(\tR\bclientId\x12!\n" +
	"\fwireguard_id\x18\x05 \x01(\rR\vwireguardId\"\x86\x02\n" +
	"\rWireGuardLink\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12*\n" +
	"\x11from_wireguard_id\x18\x02 \x01(\rR\x0ffromWireguardId\x12&\n" +
	"\x0fto_wireguard_id\x18\x03 \x01(\rR\rtoWireguardId\x12*\n" +
	"\x11up_bandwidth_mbps\x18\x04 \x01(\rR\x0fupBandwidthMbps\x12.\n" +
	"\x13down_bandwidth_mbps\x18\x05 \x01(\rR\x11downBandwidthMbps\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\x06 \x01(\rR\tlatencyMs\x12\x16\n" +
	"\x06active\x18\a \x01(\bR\x06active\"@\n" +
	"\x0eWireGuardLinks\x12.\n" +
	"\x05links\x18\x01 \x03(\v2\x18.wireguard.WireGuardLinkR\x05links\"\x9f\x01\n" +
	"\aNetwork\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\rR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\rR\x06userId\x12\x1b\n" +
	"\ttenant_id\x18\x03 \x01(\rR\btenantId\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x12\n" +
	"\x04cidr\x18\x05 \x01(\tR\x04cidr\x12&\n" +
	"\x03acl\x18\x06 \x01(\v2\x14.wireguard.AclConfigR\x03acl\"9\n" +
	"\tAclConfig\x12,\n" +
	"\x04acls\x18\x01 \x03(\v2\x18.wireguard.AclRuleConfigR\x04acls\"K\n" +
	"\rAclRuleConfig\x12\x16\n" +
	"\x06action\x18\x01 \x01(\tR\x06action\x12\x10\n" +
	"\x03src\x18\x02 \x03(\tR\x03src\x12\x10\n" +
	"\x03dst\x18\x03 \x03(\tR\x03dst\"\xc2\x04\n" +
	"\x11WGPeerRuntimeInfo\x12\x1d\n" +
	"\n" +
	"public_key\x18\x01 \x01(\tR\tpublicKey\x12#\n" +
	"\rpreshared_key\x18\x02 \x01(\tR\fpresharedKey\x12\x1f\n" +
	"\vallowed_ips\x18\x03 \x03(\tR\n" +
	"allowedIps\x12#\n" +
	"\rendpoint_host\x18\x04 \x01(\tR\fendpointHost\x12#\n" +
	"\rendpoint_port\x18\x05 \x01(\rR\fendpointPort\x12\x19\n" +
	"\btx_bytes\x18\x06 \x01(\x04R\atxBytes\x12\x19\n" +
	"\brx_bytes\x18\a \x01(\x04R\arxBytes\x12B\n" +
	"\x1dpersistent_keepalive_interval\x18\b \x01(\rR\x1bpersistentKeepaliveInterval\x127\n" +
	"\x18last_handshake_time_nsec\x18\t \x01(\x04R\x15lastHandshakeTimeNsec\x125\n" +
	"\x17last_handshake_time_sec\x18\n" +
	" \x01(\x04R\x14lastHandshakeTimeSec\x12\x1b\n" +
	"\tclient_id\x18\v \x01(\tR\bclientId\x12=\n" +
	"\x05extra\x18d \x03(\v2'.wireguard.WGPeerRuntimeInfo.ExtraEntryR\x05extra\x1a8\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8f\x04\n" +
	"\x13WGDeviceRuntimeInfo\x12\x1f\n" +
	"\vprivate_key\x18\x01 \x01(\tR\n" +
	"privateKey\x12\x1f\n" +
	"\vlisten_port\x18\x02 \x01(\rR\n" +
	"listenPort\x122\n" +
	"\x05peers\x18\x03 \x03(\v2\x1c.wireguard.WGPeerRuntimeInfoR\x05peers\x12)\n" +
	"\x10protocol_version\x18\x04 \x01(\rR\x0fprotocolVersion\x12\x14\n" +
	"\x05errno\x18\x05 \x01(\x05R\x05errno\x12\x1b\n" +
	"\tclient_id\x18\x06 \x01(\tR\bclientId\x12F\n" +
	"\bping_map\x18\a \x03(\v2+.wireguard.WGDeviceRuntimeInfo.PingMapEntryR\apingMap\x12%\n" +
	"\x0einterface_name\x18\b \x01(\tR\rinterfaceName\x12?\n" +
	"\x05extra\x18d \x03(\v2).wireguard.WGDeviceRuntimeInfo.ExtraEntryR\x05extra\x1a:\n" +
	"\fPingMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\rR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\rR\x05value:\x028\x01\x1a8\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\aZ\x05../pbb\x06proto3"

var (
	file_types_wg_proto_rawDescOnce sync.Once
	file_types_wg_proto_rawDescData []byte
)

func file_types_wg_proto_rawDescGZIP() []byte {
	file_types_wg_proto_rawDescOnce.Do(func() {
		file_types_wg_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_types_wg_proto_rawDesc), len(file_types_wg_proto_rawDesc)))
	})
	return file_types_wg_proto_rawDescData
}

var file_types_wg_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_types_wg_proto_goTypes = []any{
	(*WireGuardPeerConfig)(nil), // 0: wireguard.WireGuardPeerConfig
	(*WireGuardConfig)(nil),     // 1: wireguard.WireGuardConfig
	(*Endpoint)(nil),            // 2: wireguard.Endpoint
	(*WireGuardLink)(nil),       // 3: wireguard.WireGuardLink
	(*WireGuardLinks)(nil),      // 4: wireguard.WireGuardLinks
	(*Network)(nil),             // 5: wireguard.Network
	(*AclConfig)(nil),           // 6: wireguard.AclConfig
	(*AclRuleConfig)(nil),       // 7: wireguard.AclRuleConfig
	(*WGPeerRuntimeInfo)(nil),   // 8: wireguard.WGPeerRuntimeInfo
	(*WGDeviceRuntimeInfo)(nil), // 9: wireguard.WGDeviceRuntimeInfo
	nil,                         // 10: wireguard.WGPeerRuntimeInfo.ExtraEntry
	nil,                         // 11: wireguard.WGDeviceRuntimeInfo.PingMapEntry
	nil,                         // 12: wireguard.WGDeviceRuntimeInfo.ExtraEntry
}
var file_types_wg_proto_depIdxs = []int32{
	2,  // 0: wireguard.WireGuardPeerConfig.endpoint:type_name -> wireguard.Endpoint
	0,  // 1: wireguard.WireGuardConfig.peers:type_name -> wireguard.WireGuardPeerConfig
	2,  // 2: wireguard.WireGuardConfig.advertised_endpoints:type_name -> wireguard.Endpoint
	3,  // 3: wireguard.WireGuardLinks.links:type_name -> wireguard.WireGuardLink
	6,  // 4: wireguard.Network.acl:type_name -> wireguard.AclConfig
	7,  // 5: wireguard.AclConfig.acls:type_name -> wireguard.AclRuleConfig
	10, // 6: wireguard.WGPeerRuntimeInfo.extra:type_name -> wireguard.WGPeerRuntimeInfo.ExtraEntry
	8,  // 7: wireguard.WGDeviceRuntimeInfo.peers:type_name -> wireguard.WGPeerRuntimeInfo
	11, // 8: wireguard.WGDeviceRuntimeInfo.ping_map:type_name -> wireguard.WGDeviceRuntimeInfo.PingMapEntry
	12, // 9: wireguard.WGDeviceRuntimeInfo.extra:type_name -> wireguard.WGDeviceRuntimeInfo.ExtraEntry
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_types_wg_proto_init() }
func file_types_wg_proto_init() {
	if File_types_wg_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_types_wg_proto_rawDesc), len(file_types_wg_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_types_wg_proto_goTypes,
		DependencyIndexes: file_types_wg_proto_depIdxs,
		MessageInfos:      file_types_wg_proto_msgTypes,
	}.Build()
	File_types_wg_proto = out.File
	file_types_wg_proto_goTypes = nil
	file_types_wg_proto_depIdxs = nil
}
